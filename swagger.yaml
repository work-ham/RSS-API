openapi: 3.0.0
info:
  title: Traffic Sign Detector API
  description: API documentation for the Traffic Sign Detector mobile app
  version: 1.0.0
servers:
  - url: http://localhost:8080
  - url: YOUR_DEPLOYED_URL
paths:
  /auth/register:
    post:
      summary: User Registration
      description: Register a new user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        200:
          description: User registered successfully
        400:
          description: Bad Request - Invalid input data
  /auth/login:
    post:
      summary: User Login
      description: Authenticate and login a user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        200:
          description: User logged in successfully
        401:
          description: Unauthorized - Invalid credentials
  /auth/profile:
    get:
      summary: Get User Profile
      description: Retrieve the user's profile information
      security:
        - BearerAuth: []
      responses:
        200:
          description: User profile retrieved successfully
        401:
          description: Unauthorized - Invalid or expired access token
  /auth/change-password:
    post:
      summary: Change user password
      description: Endpoint to change user password
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        200:
          description: Password changed successfully
        401:
          description: Unauthorized - Invalid or expired access token
        400:
          description: Bad Request - Invalid input data
  /auth/change-username:
    post:
      summary: Change username
      description: Endpoint to change user's username
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeUsernameRequest'
      responses:
        200:
          description: Username changed successfully
        401:
          description: Unauthorized - Invalid or expired access token
        400:
          description: Bad Request - Invalid input data
  /auth/delete-profile:
    delete:
      summary: Delete User Profile
      description: Delete the user's profile
      security:
        - BearerAuth: []
      responses:
        200:
          description: User profile deleted successfully
        401:
          description: Unauthorized - Invalid or expired access token
  /auth/change-email:
    post:
      summary: Change email
      description: Endpoint to change user's email
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
      responses:
        200:
          description: Email address changed successfully
        401:
          description: Unauthorized - Invalid or expired access token
        400:
          description: Bad Request - Invalid input data
  # Add more paths for other endpoints
components:
    securitySchemes:
      BearerAuth:
        type: apiKey
        in: header
        name: Authorization
        description: Bearer token for authorization 
    
    schemas:
      UserRegister:
        type: object
        properties:
          name:
            type: string
          email:
            type: string
          username:
            type: string
          password:
            type: string
        required:
          - name
          - email
          - username
          - password
      Login:
        type: object
        properties:
          identifier:
            type: string
          password:
            type: string
        required:
          - identifier
          - password
      ChangePassword:
        type: object
        properties:
          userId:
            type: integer
          currentPassword:
            type: string
          newPassword:
            type: string
        required:
          - userId
          - currentPassword
          - newPassword
      ChangeUsername:
        type: object
        properties:
          userId:
            type: integer
          newUsername:
            type: string
        required:
          - userId
          - newUsername
      ChangeEmail:
        type: object
        properties:
          userId:
            type: integer
          newEmail:
            type: string
        required:
          - userId
          - newEmail
      DeleteProfile:
        type: object
        properties:
          userId:
            type: integer
        required:
          - userId
      SuccessResponse:
        type: object
        properties:
          message:
            type: string
      ErrorResponse:
        type: object
        properties:
          error:
            type: string
      
      